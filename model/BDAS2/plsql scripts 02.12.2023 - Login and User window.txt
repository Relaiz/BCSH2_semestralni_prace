-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-11-21 14:58:44 CET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE adresa (
    id_adres      NUMBER NOT NULL,
    ulice         VARCHAR2(32) NOT NULL,
    mesto         VARCHAR2(32) NOT NULL,
    cislo_popisne VARCHAR2(10) NOT NULL,
    psc           CHAR(10) NOT NULL,
    stat          VARCHAR2(32) NOT NULL
);

CREATE INDEX adresa_id_idx ON
    adresa (
        id_adres
    ASC );

ALTER TABLE adresa ADD CONSTRAINT adresa_pk PRIMARY KEY ( id_adres );

CREATE TABLE bank (
    id_bank NUMBER NOT NULL,
    kod     NUMBER NOT NULL,
    nazev   VARCHAR2(32) NOT NULL
);

CREATE INDEX bank__idx ON
    bank (
        id_bank
    ASC );

ALTER TABLE bank ADD CONSTRAINT bank_pk PRIMARY KEY ( id_bank );

CREATE TABLE bankomat (
    id_bankomat      NUMBER NOT NULL,
    adresa_id_adres  NUMBER NOT NULL,
    bank_id_bank     NUMBER NOT NULL,
    nazev            VARCHAR2(32) NOT NULL,
    status_id_status NUMBER NOT NULL
);

CREATE INDEX bankomat__idx ON
    bankomat (
        id_bankomat
    ASC );

CREATE INDEX bankomat_adres_idx ON
    bankomat (
        adresa_id_adres
    ASC );

CREATE INDEX bankomat_status_idx ON
    bankomat (
        status_id_status
    ASC );

CREATE INDEX bankomat_bank_idx ON
    bankomat (
        bank_id_bank
    ASC );

ALTER TABLE bankomat ADD CONSTRAINT bankomat_pk PRIMARY KEY ( id_bankomat );


CREATE TABLE debetni_karta (
    id_karta NUMBER NOT NULL,
    limit    NUMBER NOT NULL
);

ALTER TABLE debetni_karta ADD CONSTRAINT debetni_karta_pk PRIMARY KEY ( id_karta );

CREATE TABLE karta (
    id_karta        NUMBER NOT NULL,
    jmeno           VARCHAR2(32) NOT NULL,
    prijmeni        VARCHAR2(32) NOT NULL,
    cislo_karty     NUMBER NOT NULL,
    platebni_system VARCHAR2(32) NOT NULL,
    platnost        DATE NOT NULL,
    typ             VARCHAR2(1) NOT NULL,
    ucet_id_ucet    NUMBER NOT NULL
);

CREATE INDEX karta_id_idx ON
    karta (
        id_karta
    ASC );

CREATE INDEX karta_ucet_idxv1 ON
    karta (
        ucet_id_ucet
    ASC );

CREATE INDEX karta_type_idx ON
    karta (
        typ
    ASC );

ALTER TABLE karta ADD CONSTRAINT karta_pk PRIMARY KEY ( id_karta );

CREATE TABLE klient (
    id_klient           NUMBER NOT NULL,
    cislo_prukazu       NUMBER NOT NULL,
    jmeno               VARCHAR2(32) NOT NULL,
    prijmeni            VARCHAR2(32) NOT NULL,
    klient_email        VARCHAR2(70) NOT NULL,
    adresa_id_adres     NUMBER NOT NULL,
    bank_id_bank        NUMBER NOT NULL,
    telefoni_cislo      VARCHAR2(20) NOT NULL,
    zame_id_zamestnanec NUMBER NOT NULL,
    odesi_file_id_file  NUMBER ,
    odes_file_id_klient NUMBER ,
    id_file1            NUMBER ,
    id_klient2          NUMBER 
);

CREATE INDEX klient_id_idx ON
    klient (
        id_klient
    ASC );

CREATE INDEX klient_adres_idxv1 ON
    klient (
        adresa_id_adres
    ASC );

CREATE INDEX klient_bank_idx ON
    klient (
        bank_id_bank
    ASC );

CREATE INDEX klient_zamestnanec_idxv1 ON
    klient (
        zame_id_zamestnanec
    ASC );

CREATE INDEX klient_name_idx ON
    klient (
        jmeno
    ASC,
        prijmeni
    ASC );

CREATE INDEX klient_enail_idx ON
    klient (
        id_klient
    ASC,
        klient_email
    ASC );

ALTER TABLE klient ADD CONSTRAINT klient_pk PRIMARY KEY ( id_klient );

ALTER TABLE klient ADD CONSTRAINT klient_email_un UNIQUE ( klient_email );

ALTER TABLE klient ADD CONSTRAINT klient_name_unv1 UNIQUE ( jmeno,
                                                            prijmeni );
CREATE TABLE klient_schuzka (
    klient_id_klient   NUMBER NOT NULL,
    schuzka_id_schuzka NUMBER NOT NULL
);

ALTER TABLE klient_schuzka ADD CONSTRAINT klient_schuzka_pk PRIMARY KEY ( klient_id_klient,
                                                                          schuzka_id_schuzka );

CREATE TABLE kreditni_karta (
    id_karta            NUMBER NOT NULL,
    uverzovy_limit      NUMBER NOT NULL,
    bezurocne_obdobi    NUMBER NOT NULL,
    urokova_sazba       NUMBER NOT NULL,
    povina_platba_uveru NUMBER NOT NULL
);

ALTER TABLE kreditni_karta ADD CONSTRAINT kreditni_karta_pk PRIMARY KEY ( id_karta );

CREATE TABLE log_table (
    tabulka  VARCHAR2(32),
    operace  VARCHAR2(32),
    cas      TIMESTAMP WITH LOCAL TIME ZONE,
    uzivatel VARCHAR2(32)
);

CREATE TABLE login (
    zamestnanec_id_zamestnanec NUMBER,
    email                      VARCHAR2(100) NOT NULL,
    heslo                      VARCHAR2(100) NOT NULL,
    is_admin                   NUMBER NOT NULL,
    klient_id_klient           NUMBER ,
    id_file                    NUMBER ,
    id_klient                  NUMBER,
    
    FOREIGN KEY (zamestnanec_id_zamestnanec) REFERENCES zamestnanec (id_zamestnanec),
    FOREIGN KEY (klient_id_klient) REFERENCES klient (id_klient)
);

CREATE UNIQUE INDEX login_klient_idx ON
    login (
        klient_id_klient
    ASC );

CREATE UNIQUE INDEX login_zamestnanec_idxv1 ON
    login (
        zamestnanec_id_zamestnanec
    ASC );

ALTER TABLE login ADD CONSTRAINT login_pk PRIMARY KEY ( email );

CREATE TABLE odesilani_file (
    id_file                    NUMBER NOT NULL,
    nazev_file                 VARCHAR2(100),
    "file"                     BLOB,
    prijemce_file              VARCHAR2(50),
    format_file                VARCHAR2(32),
    zamestnanec_id_zamestnanec NUMBER NOT NULL,
    klient_id_klient           NUMBER NOT NULL,
    id_file1                   NUMBER NOT NULL,
    id_klient1                 NUMBER NOT NULL
);

CREATE INDEX odesilani_file__id ON
    odesilani_file (
        id_file
    ASC );

CREATE INDEX odes_file_prij_klie ON
    odesilani_file (
        klient_id_klient
    ASC,
        prijemce_file
    ASC );

CREATE INDEX odes_file_prij_zam ON
    odesilani_file (
        prijemce_file
    ASC,
        zamestnanec_id_zamestnanec
    ASC );

ALTER TABLE odesilani_file ADD CONSTRAINT odesilani_file_pk PRIMARY KEY ( id_file,
                                                                          klient_id_klient );

CREATE TABLE operace (
    id_operace       NUMBER NOT NULL,
    castka           NUMBER NOT NULL,
    datum_zacatka    DATE NOT NULL,
    datum_okonceni   DATE NOT NULL,
    nazev            VARCHAR2(32) NOT NULL,
    z_uctu           NUMBER NOT NULL,
    do_uctu          NUMBER NOT NULL,
    ucet_id_ucet     NUMBER NOT NULL,
    status_id_status NUMBER NOT NULL
);

CREATE INDEX operace_id_idx ON
    operace (
        id_operace
    ASC );

CREATE INDEX operace_ucet_idxv1 ON
    operace (
        ucet_id_ucet
    ASC );

CREATE INDEX operace_status_idx ON
    operace (
        status_id_status
    ASC );

ALTER TABLE operace ADD CONSTRAINT operace_pk PRIMARY KEY ( id_operace );

CREATE TABLE pobocka (
    id_pobocka                 NUMBER NOT NULL,
    nazev                      VARCHAR2(32) NOT NULL,
    adresa_id_adres            NUMBER NOT NULL,
    bank_id_bank               NUMBER NOT NULL,
    telefoni_cislo             VARCHAR2(20) NOT NULL,
    status_id_status           NUMBER NOT NULL,
    zamestnanec_id_zamestnanec NUMBER NOT NULL,
    id_file                    NUMBER ,
    id_klient                  NUMBER 
);

CREATE INDEX pobocka_id_idx ON
    pobocka (
        id_pobocka
    ASC );

CREATE INDEX pobocka_adres_idxv1 ON
    pobocka (
        adresa_id_adres
    ASC );

CREATE INDEX pobocka_bank_idx ON
    pobocka (
        bank_id_bank
    ASC );

CREATE INDEX pobocka_status_idxv1 ON
    pobocka (
        status_id_status
    ASC );

CREATE INDEX pobocka_zamestnanec_idx ON
    pobocka (
        zamestnanec_id_zamestnanec
    ASC );

ALTER TABLE pobocka ADD CONSTRAINT pobocka_pk PRIMARY KEY ( id_pobocka );

CREATE TABLE prace_pozice (
    id_pozice    NUMBER NOT NULL,
    pozice_nazev VARCHAR2(100) NOT NULL,
    min_mzda     NUMBER NOT NULL,
    max_mzda     NUMBER NOT NULL
);

ALTER TABLE prace_pozice ADD CONSTRAINT prace_pozice_pk PRIMARY KEY ( id_pozice );

CREATE TABLE schuzka (
    id_schuzka         NUMBER NOT NULL,
    datum              DATE NOT NULL,
    pobocka_id_pobocka NUMBER NOT NULL,
    status_id_status   NUMBER NOT NULL
);

CREATE INDEX schuzka_id_idx ON
    schuzka (
        id_schuzka
    ASC );

CREATE INDEX schuzka_pobocka_idx ON
    schuzka (
        pobocka_id_pobocka
    ASC );

CREATE INDEX schuzka_status_idxv1 ON
    schuzka (
        status_id_status
    ASC );

CREATE UNIQUE INDEX schuzka_datum_idx ON
    schuzka (
        datum
    ASC );

ALTER TABLE schuzka ADD CONSTRAINT schuzka_pk PRIMARY KEY ( id_schuzka );

CREATE TABLE status (
    id_status NUMBER NOT NULL,
    popis     VARCHAR2(32) NOT NULL
);

ALTER TABLE status ADD CONSTRAINT status_pk PRIMARY KEY ( id_status );

CREATE TABLE ucet (
    id_ucet          NUMBER NOT NULL,
    cislo_uctu       NUMBER NOT NULL,
    nazev            VARCHAR2(32) NOT NULL,
    klient_id_klient NUMBER NOT NULL,
    bank_id_bank     NUMBER NOT NULL,
    status_id_status NUMBER NOT NULL
);

CREATE INDEX ucet_id_idx ON
    ucet (
        id_ucet
    ASC );

CREATE INDEX ucet_klient_idxv1 ON
    ucet (
        klient_id_klient
    ASC );

CREATE INDEX ucet_status_idx ON
    ucet (
        status_id_status
    ASC );

CREATE INDEX ucet_bank_idx ON
    ucet (
        bank_id_bank
    ASC );

ALTER TABLE ucet ADD CONSTRAINT ucet_pk PRIMARY KEY ( id_ucet );



CREATE TABLE zamestnanec (
    id_zamestnanec              NUMBER NOT NULL,
    jmeno                       VARCHAR2(32) NOT NULL,
    prijmeni                    VARCHAR2(32) NOT NULL,
    mzda                        NUMBER NOT NULL,
    telefoni_cislo              VARCHAR2(20) NOT NULL,
    adresa_id_adres             NUMBER NOT NULL,
    bank_id_bank                NUMBER NOT NULL,
    status_id_status            NUMBER NOT NULL,
    zamestnanec_id_zamestnanec1 NUMBER NOT NULL,
    pobocka_id_pobocka          NUMBER ,
    prace_pozice_id_pozice      NUMBER NOT NULL,
    email_zamestnanec           VARCHAR2(32) NOT NULL,
    odesilani_file_id_file      NUMBER ,
    odesilani_file_id_klient    NUMBER ,
    id_file1                    NUMBER ,
    id_klient1                  NUMBER 
);

CREATE INDEX zamestnanec_pobocka_idx ON
    zamestnanec (
        pobocka_id_pobocka
    ASC );

CREATE UNIQUE INDEX zamestnanec_email_idx ON
    zamestnanec (
        email_zamestnanec
    ASC );

CREATE UNIQUE INDEX zamestnanec_id_pk ON
    zamestnanec (
        id_zamestnanec
    ASC );

CREATE INDEX zamestnanec_prace_idx ON
    zamestnanec (
        prace_pozice_id_pozice
    ASC );

CREATE INDEX zamestnanec_manazer_idx ON
    zamestnanec (
        zamestnanec_id_zamestnanec1
    ASC );

CREATE INDEX zamestnanec_name_idx ON
    zamestnanec (
        jmeno
    ASC,
        prijmeni
    ASC );

CREATE INDEX zamestnanec_status_idx ON
    zamestnanec (
        status_id_status
    ASC );

CREATE INDEX zamestnanec_adres_idx ON
    zamestnanec (
        adresa_id_adres
    ASC );

CREATE INDEX zamestnanec_pozice_idx ON
    zamestnanec (
        prace_pozice_id_pozice
    ASC );

CREATE INDEX zamestnanec_bank_idxv1 ON
    zamestnanec (
        bank_id_bank
    ASC );

CREATE INDEX zamestnanec__file_odesilatel ON
    zamestnanec (
        odesilani_file_id_file
    ASC,
        odesilani_file_id_klient
    ASC );

CREATE INDEX zamestnanec__id_file ON
    zamestnanec (
        odesilani_file_id_file
    ASC );

ALTER TABLE zamestnanec ADD CONSTRAINT zamestnanec_pk PRIMARY KEY ( id_zamestnanec );

ALTER TABLE zamestnanec ADD CONSTRAINT zam_email_zam_un UNIQUE ( email_zamestnanec );

CREATE TABLE zustatek (
    id_zustatek      NUMBER NOT NULL,
    blokovane_castka NUMBER NOT NULL,
    volna_castka     NUMBER NOT NULL,
    "date"           DATE NOT NULL,
    ucet_id_ucet     NUMBER NOT NULL
);

CREATE INDEX zustatek_id_idx ON
    zustatek (
        id_zustatek
    ASC );

CREATE INDEX zustatek_ucet_idx ON
    zustatek (
        ucet_id_ucet
    ASC );

ALTER TABLE zustatek ADD CONSTRAINT zustatek_pk PRIMARY KEY ( id_zustatek );

ALTER TABLE bankomat
    ADD CONSTRAINT bankomat_adresa_fk FOREIGN KEY ( adresa_id_adres )
        REFERENCES adresa ( id_adres );

ALTER TABLE bankomat
    ADD CONSTRAINT bankomat_bank_fk FOREIGN KEY ( bank_id_bank )
        REFERENCES bank ( id_bank );

ALTER TABLE bankomat
    ADD CONSTRAINT bankomat_status_fk FOREIGN KEY ( status_id_status )
        REFERENCES status ( id_status );

ALTER TABLE debetni_karta
    ADD CONSTRAINT debetni_karta_karta_fk FOREIGN KEY ( id_karta )
        REFERENCES karta ( id_karta );

ALTER TABLE karta
    ADD CONSTRAINT karta_ucet_fk FOREIGN KEY ( ucet_id_ucet )
        REFERENCES ucet ( id_ucet );

ALTER TABLE klient
    ADD CONSTRAINT klient_adresa_fk FOREIGN KEY ( adresa_id_adres )
        REFERENCES adresa ( id_adres );

ALTER TABLE klient
    ADD CONSTRAINT klient_bank_fk FOREIGN KEY ( bank_id_bank )
        REFERENCES bank ( id_bank );

ALTER TABLE klient
    ADD CONSTRAINT klient_odesilani_file_fk FOREIGN KEY ( odesilani_file_id_file,
                                                          odesilani_file_id_klient )
        REFERENCES odesilani_file ( id_file,
                                    klient_id_klient );

ALTER TABLE klient_schuzka
    ADD CONSTRAINT klient_schuzka_klient_fk FOREIGN KEY ( klient_id_klient )
        REFERENCES klient ( id_klient );

ALTER TABLE klient_schuzka
    ADD CONSTRAINT klient_schuzka_schuzka_fk FOREIGN KEY ( schuzka_id_schuzka )
        REFERENCES schuzka ( id_schuzka );

ALTER TABLE klient
    ADD CONSTRAINT klient_zamestnanec_fk FOREIGN KEY ( zamestnanec_id_zamestnanec )
        REFERENCES zamestnanec ( id_zamestnanec );

ALTER TABLE kreditni_karta
    ADD CONSTRAINT kreditni_karta_karta_fk FOREIGN KEY ( id_karta )
        REFERENCES karta ( id_karta );

ALTER TABLE login
    ADD CONSTRAINT login_klient_fk FOREIGN KEY ( klient_id_klient )
        REFERENCES klient ( id_klient );

ALTER TABLE login
    ADD CONSTRAINT login_zamestnanec_fk FOREIGN KEY ( zamestnanec_id_zamestnanec )
        REFERENCES zamestnanec ( id_zamestnanec );

ALTER TABLE odesilani_file
    ADD CONSTRAINT odesilani_file_klient_fk FOREIGN KEY ( klient_id_klient )
        REFERENCES klient ( id_klient );

ALTER TABLE odesilani_file
    ADD CONSTRAINT odesilani_file_zamestnanec_fk FOREIGN KEY ( zamestnanec_id_zamestnanec )
        REFERENCES zamestnanec ( id_zamestnanec );

ALTER TABLE operace
    ADD CONSTRAINT operace_status_fk FOREIGN KEY ( status_id_status )
        REFERENCES status ( id_status );

ALTER TABLE operace
    ADD CONSTRAINT operace_ucet_fk FOREIGN KEY ( ucet_id_ucet )
        REFERENCES ucet ( id_ucet );

ALTER TABLE pobocka
    ADD CONSTRAINT pobocka_adresa_fk FOREIGN KEY ( adresa_id_adres )
        REFERENCES adresa ( id_adres );

ALTER TABLE pobocka
    ADD CONSTRAINT pobocka_bank_fk FOREIGN KEY ( bank_id_bank )
        REFERENCES bank ( id_bank );

ALTER TABLE pobocka
    ADD CONSTRAINT pobocka_status_fk FOREIGN KEY ( status_id_status )
        REFERENCES status ( id_status );

ALTER TABLE pobocka
    ADD CONSTRAINT pobocka_zamestnanec_fk FOREIGN KEY ( zamestnanec_id_zamestnanec )
        REFERENCES zamestnanec ( id_zamestnanec );

ALTER TABLE schuzka
    ADD CONSTRAINT schuzka_pobocka_fk FOREIGN KEY ( pobocka_id_pobocka )
        REFERENCES pobocka ( id_pobocka );

ALTER TABLE schuzka
    ADD CONSTRAINT schuzka_status_fk FOREIGN KEY ( status_id_status )
        REFERENCES status ( id_status );

ALTER TABLE ucet
    ADD CONSTRAINT ucet_bank_fk FOREIGN KEY ( bank_id_bank )
        REFERENCES bank ( id_bank );

ALTER TABLE ucet
    ADD CONSTRAINT ucet_klient_fk FOREIGN KEY ( klient_id_klient )
        REFERENCES klient ( id_klient );

ALTER TABLE ucet
    ADD CONSTRAINT ucet_status_fk FOREIGN KEY ( status_id_status )
        REFERENCES status ( id_status );

ALTER TABLE zamestnanec
    ADD CONSTRAINT zamestnanec_adresa_fk FOREIGN KEY ( adresa_id_adres )
        REFERENCES adresa ( id_adres );

ALTER TABLE zamestnanec
    ADD CONSTRAINT zamestnanec_bank_fk FOREIGN KEY ( bank_id_bank )
        REFERENCES bank ( id_bank );

ALTER TABLE zamestnanec
    ADD CONSTRAINT zamestnanec_odesilani_file_fk FOREIGN KEY ( odesilani_file_id_file,
                                                               odesilani_file_id_klient )
        REFERENCES odesilani_file ( id_file,
                                    klient_id_klient );

ALTER TABLE zamestnanec
    ADD CONSTRAINT zamestnanec_pobocka_fk FOREIGN KEY ( pobocka_id_pobocka )
        REFERENCES pobocka ( id_pobocka );

ALTER TABLE zamestnanec
    ADD CONSTRAINT zamestnanec_prace_pozice_fk FOREIGN KEY ( prace_pozice_id_pozice )
        REFERENCES prace_pozice ( id_pozice );

ALTER TABLE zamestnanec
    ADD CONSTRAINT zamestnanec_status_fk FOREIGN KEY ( status_id_status )
        REFERENCES status ( id_status );

ALTER TABLE zamestnanec
    ADD CONSTRAINT zamestnanec_zamestnanec_fk FOREIGN KEY ( zamestnanec_id_zamestnanec1 )
        REFERENCES zamestnanec ( id_zamestnanec );

ALTER TABLE zustatek
    ADD CONSTRAINT zustatek_ucet_fk FOREIGN KEY ( ucet_id_ucet )
        REFERENCES ucet ( id_ucet );

CREATE OR REPLACE TRIGGER arc_fkarc_1_debetni_karta BEFORE
    INSERT OR UPDATE OF id_karta ON debetni_karta
    FOR EACH ROW
DECLARE
    d VARCHAR2(1);
BEGIN
    SELECT
        a.typ
    INTO d
    FROM
        karta a
    WHERE
        a.id_karta = :new.id_karta;

    IF ( d IS NULL OR d <> 'D' ) THEN
        raise_application_error(-20223, 'FK debetni_karta_Karta_FK in Table debetni_karta violates Arc constraint on Table Karta - discriminator column typ doesn''t have value ''D'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_kreditni_karta BEFORE
    INSERT OR UPDATE OF id_karta ON kreditni_karta
    FOR EACH ROW
DECLARE
    d VARCHAR2(1);
BEGIN
    SELECT
        a.typ
    INTO d
    FROM
        karta a
    WHERE
        a.id_karta = :new.id_karta;

    IF ( d IS NULL OR d <> 'K' ) THEN
        raise_application_error(-20223, 'FK kreditni_karta_Karta_FK in Table kreditni_karta violates Arc constraint on Table Karta - discriminator column typ doesn''t have value ''K'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            19
-- CREATE INDEX                            49
-- ALTER TABLE                             54
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
--Drop table adresa


--DROP SEQUENCE adresa_sequence;
CREATE SEQUENCE adresa_sequence
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
/
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Oak Street', 'Springfield', '123', '12345', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Maple Avenue', 'Rivertown', '456', '67890', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Pine Road', 'Mountain View', '789', '54321', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Main Street', 'Cityville', '101', '98765', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Cedar Lane', 'Harbor City', '202', '45678', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Elm Boulevard', 'Laketown', '303', '34567', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Birch Drive', 'Hilltop', '404', '87654', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Willow Court', 'Meadowville', '505', '23456', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Cherry Lane', 'Sunnydale', '606', '78901', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Sycamore Street', 'Oceanview', '707', '10987', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Hickory Lane', 'Greenfield', '808', '65432', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Poplar Road', 'Riverdale', '909', '21098', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Cypress Avenue', 'Hillside', '111', '87654', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Chestnut Drive', 'Meadowview', '222', '54321', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Palm Court', 'Sunset City', '333', '12345', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Linden Lane', 'Beachside', '444', '87654', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Magnolia Avenue', 'Lighthouse Bay', '555', '78901', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Spruce Street', 'Valleytown', '666', '21098', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Ash Road', 'Highland', '777', '45678', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Fir Avenue', 'Parkville', '888', '65432', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Willow Lane', 'Meadowville', '999', '34567', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Rose Street', 'Springfield', '777', '21098', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Pine Avenue', 'Mountain View', '555', '54321', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Cedar Road', 'Hilltop', '333', '87654', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Maple Drive', 'Rivertown', '111', '10987', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Sycamore Lane', 'Oceanview', '888', '98765', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Birch Court', 'Cityville', '666', '23456', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Cherry Road', 'Sunnydale', '444', '78901', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Poplar Lane', 'Laketown', '222', '21098', 'USA');
INSERT INTO adresa (id_adres, ulice, mesto, cislo_popisne, psc, stat) VALUES (adresa_sequence.NEXTVAL, 'Hickory Avenue', 'Harbor City', '999', '45678', 'USA');
/
--select * from adresa;
--drop table bank

CREATE SEQUENCE bank_sequence
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
/
INSERT INTO bank (id_bank, kod, nazev) VALUES (bank_sequence.NEXTVAL, 123, 'Sunrise Bank');
/
--select * from bank;

--drop sequence status_sequence;
CREATE SEQUENCE status_sequence
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
/

INSERT  INTO status (id_status, popis) VALUES (status_sequence.NEXTVAL, 'Working');
INSERT  INTO status (id_status, popis) VALUES (status_sequence.NEXTVAL, 'Closed');
INSERT  INTO status (id_status, popis) VALUES (status_sequence.NEXTVAL, 'On Vacation');
INSERT INTO status (id_status, popis) VALUES (status_sequence.NEXTVAL, 'Pending');
INSERT INTO status (id_status, popis) VALUES (status_sequence.NEXTVAL, 'Active');
INSERT INTO status (id_status, popis) VALUES (status_sequence.NEXTVAL, 'Inactive');
INSERT INTO status (id_status, popis) VALUES (status_sequence.NEXTVAL, 'Confirmed');
INSERT INTO status (id_status, popis) VALUES (status_sequence.NEXTVAL, 'Rejected');
INSERT INTO status (id_status, popis) VALUES (status_sequence.NEXTVAL, 'In Progress');
INSERT INTO status (id_status, popis) VALUES (status_sequence.NEXTVAL, 'Completed');
/
--select * from status ;
--drop table bankomat

CREATE SEQUENCE bankomat_sequence
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
/

INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 1, 1, 'ATM 1', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 2, 1, 'ATM 2', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 3, 1, 'ATM 3', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 4, 1, 'ATM 4', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 5, 1, 'ATM 5', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 6, 1, 'ATM 6', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 7, 1, 'ATM 7', 6);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 8, 1, 'ATM 8', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 9, 1, 'ATM 9', 6);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 10, 1, 'ATM 10', 6);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 11, 1, 'ATM 11', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 12, 1, 'ATM 12', 6);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 13, 1, 'ATM 13', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 14, 1, 'ATM 14', 6);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 15, 1, 'ATM 15', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 16, 1, 'ATM 16', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 17, 1, 'ATM 17', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 18, 1, 'ATM 18', 6);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 19, 1, 'ATM 19', 5);
INSERT INTO bankomat (id_bankomat, adresa_id_adres, bank_id_bank, nazev, status_id_status) VALUES (bankomat_sequence.NEXTVAL, 20, 1, 'ATM 20', 6);
/
--drop SEQUENCE prace_pozice_sequence;
CREATE SEQUENCE prace_pozice_sequence
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
/
//bankomat_sequence.NEXTVAL
--select * from prace_pozice;
INSERT INTO prace_pozice (id_pozice, pozice_nazev, min_mzda, max_mzda) VALUES (prace_pozice_sequence.NEXTVAL, 'Banker', 20000, 80000);
INSERT INTO prace_pozice (id_pozice, pozice_nazev, min_mzda, max_mzda) VALUES (prace_pozice_sequence.NEXTVAL, 'Manazer', 60000, 200000);
INSERT INTO prace_pozice (id_pozice, pozice_nazev, min_mzda, max_mzda) VALUES (prace_pozice_sequence.NEXTVAL, 'Admin',30000, 120000);
/
--drop SEQUENCE zamestnanec_sequence
CREATE SEQUENCE zamestnanec_sequence
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
/
INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES 
(zamestnanec_sequence.NEXTVAL, 'John', 'Doe', 20000, '+1 (555) 123-4567', 1, 1, 1, 24, 1, 1, 'johndoe@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES 
(zamestnanec_sequence.NEXTVAL, 'Alice', 'Smith', 25000, '+1 (555) 234-5678', 2, 1, 1, 26, 1, 1, 'alicesmith@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES 
(zamestnanec_sequence.NEXTVAL, 'Bob', 'Johnson', 30000, '+1 (555) 345-6789', 3, 1, 1, 25, 2, 1, 'bobjohnson@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Emily', 'Williams', 23000, '+1 (555) 456-7890', 4, 1, 1, 25, 2, 1, 'emilywilliams@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Michael', 'Jones', 50000, '+1 (555) 567-8901', 5, 1, 1, 29, 3, 1, 'michaeljones@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Sophia', 'Brown', 60000, '+1 (555) 678-9012', 6, 1, 1, 29, 3, 1, 'sophiabrown@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Matthew', 'Wilson', 40000, '+1 (555) 789-0123', 7, 1, 1, 28, 4, 1, 'matthewwilson@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Olivia', 'Moore', 45000, '+1 (555) 890-1234', 8, 1, 1, 28, 4, 1, 'oliviamoore@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Daniel', 'Taylor', 30000, '+1 (555) 901-2345', 9, 1, 1, 27, 5, 1, 'danieltaylor@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Ava', 'Anderson', 40000, '+1 (555) 012-3456', 10, 1, 1, 27, 5, 1, 'avaanderson@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'James', 'Thomas', 50000, '+1 (555) 123-4567', 11, 1, 1, 26, 6, 1, 'jamesthomas@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Chloe', 'White', 65000, '+1 (555) 234-5678', 12, 1, 1, 26, 6, 1, 'chloewhite@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'William', 'Harris', 40000, '+1 (555) 345-6789', 13, 1, 1, 22, 7, 1, 'williamharris@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Emma', 'Martin', 35000, '+1 (555) 456-7890', 14, 1, 1, 22, 7, 1, 'emmamartin@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Benjamin', 'Clark', 30000, '+1 (555) 567-8901', 15, 1, 1, 21, 8, 1, 'benjaminclark@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Mia', 'Lewis', 25000, '+1 (555) 678-9012', 16, 1, 1, 21, 8, 1, 'mialewis@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Elijah', 'Hall', 20000, '+1 (555) 789-0123', 17, 1, 1, 23, 9, 1, 'elijahhall@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Amelia', 'Turner', 25000, '+1 (555) 890-1234', 18, 1, 1, 23, 9, 1, 'ameliaturner@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Logan', 'Ward', 50000, '+1 (555) 901-2345', 19, 1, 1, 24, 10, 1, 'loganward@gmail.com', NULL, NULL, NULL, NULL);
INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Harper', 'Fisher', 65000, '+1 (555) 012-3456', 20, 1, 1, 24, 10, 1, 'harperfisher@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Liam', 'Anderson', 60000, '+1 (555) 123-4567', 1, 1, 1, 30, 1, 2, 'liamanderson@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Avery', 'Taylor', 50000, '+1 (555) 234-5678', 12, 1, 1, 30, 2, 2, 'averytaylor@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Evelyn', 'Harris', 140000, '+1 (555) 345-6789', 3, 1, 1, 30, 3, 2, 'evelynharris@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Jackson', 'Turner', 145000, '+1 (555) 456-7890', 2, 1, 1, 30, 4, 2, 'jacksonturner@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Lucas', 'Ward', 150000, '+1 (555) 567-8901', 3, 1, 1, 30, 5, 2, 'lucasward@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Aria', 'Martin', 155000, '+1 (555) 678-9012', 5, 1, 1, 30, 6, 2, 'ariamartin@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Ethan', 'Clark', 90000, '+1 (555) 789-0123', 6, 1, 1, 30, 7, 2, 'ethanclark@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Scarlett', 'Lewis', 100000, '+1 (555) 890-1234', 18, 1, 1, 30, 8, 2, 'scarlettlewis@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Lily', 'Hall', 140000, '+1 (555) 901-2345', 29, 1, 1, 30, 9, 2, 'lilyhall@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Henry', 'Turner', 200000, '+1 (555) 012-3456', 30, 1, 1, 30, 10, 2, 'henryturner@gmail.com', NULL, NULL, NULL, NULL);

INSERT INTO zamestnanec 
(id_zamestnanec, jmeno, prijmeni, mzda, telefoni_cislo, adresa_id_adres, bank_id_bank, status_id_status,
zamestnanec_id_zamestnanec1, pobocka_id_pobocka, prace_pozice_id_pozice,
email_zamestnanec, odesilani_file_id_file, odesilani_file_id_klient, id_file1, id_klient1)
VALUES
(zamestnanec_sequence.NEXTVAL, 'Emma', 'Miller', 120000, '+1 (555) 234-5678', 6, 1, 1, 30, NULL, 3, 'admin', NULL, NULL, NULL, NULL);


--select * from zamestnanec where prace_pozice_id_pozice=3;
/


CREATE SEQUENCE pobocka_sequence
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
/
INSERT INTO pobocka 
(id_pobocka, nazev, adresa_id_adres, bank_id_bank, telefoni_cislo, status_id_status, zamestnanec_id_zamestnanec, id_file, id_klient)
VALUES
(pobocka_sequence.NEXTVAL, 'Pobocka 1', 1, 1, '+1 (555) 123-4567', 1, 21, null, null);

INSERT INTO pobocka 
(id_pobocka, nazev, adresa_id_adres, bank_id_bank, telefoni_cislo, status_id_status, zamestnanec_id_zamestnanec, id_file, id_klient)
VALUES
(pobocka_sequence.NEXTVAL, 'Pobocka 2', 2, 1, '+1 (555) 234-5678', 1, 22, null, null);

INSERT INTO pobocka 
(id_pobocka, nazev, adresa_id_adres, bank_id_bank, telefoni_cislo, status_id_status, zamestnanec_id_zamestnanec, id_file, id_klient)
VALUES
(pobocka_sequence.NEXTVAL, 'Pobocka 3', 3, 1, '+1 (555) 345-6789', 1, 23, null, null);

INSERT INTO pobocka 
(id_pobocka, nazev, adresa_id_adres, bank_id_bank, telefoni_cislo, status_id_status, zamestnanec_id_zamestnanec, id_file, id_klient)
VALUES
(pobocka_sequence.NEXTVAL, 'Pobocka 4', 4, 1, '+1 (555) 456-7890', 1, 24, null, null);

INSERT INTO pobocka 
(id_pobocka, nazev, adresa_id_adres, bank_id_bank, telefoni_cislo, status_id_status, zamestnanec_id_zamestnanec, id_file, id_klient)
VALUES
(5, 'Pobocka 5', 5, 1, '+1 (555) 567-8901', 1, 25, null, null);

INSERT INTO pobocka 
(id_pobocka, nazev, adresa_id_adres, bank_id_bank, telefoni_cislo, status_id_status, zamestnanec_id_zamestnanec, id_file, id_klient)
VALUES
(pobocka_sequence.NEXTVAL, 'Pobocka 6', 6, 1, '+1 (555) 678-9012', 1, 26, null, null);

INSERT INTO pobocka 
(id_pobocka, nazev, adresa_id_adres, bank_id_bank, telefoni_cislo, status_id_status, zamestnanec_id_zamestnanec, id_file, id_klient)
VALUES
(pobocka_sequence.NEXTVAL, 'Pobocka 7', 7, 1, '+1 (555) 789-0123', 1, 27, null, null);

INSERT INTO pobocka 
(id_pobocka, nazev, adresa_id_adres, bank_id_bank, telefoni_cislo, status_id_status, zamestnanec_id_zamestnanec, id_file, id_klient)
VALUES
(8, 'Pobocka 8', 8, 1, '+1 (555) 890-1234', 1, 28, null, null);

INSERT INTO pobocka 
(id_pobocka, nazev, adresa_id_adres, bank_id_bank, telefoni_cislo, status_id_status, zamestnanec_id_zamestnanec, id_file, id_klient)
VALUES
(pobocka_sequence.NEXTVAL, 'Pobocka 9', 9, 1, '+1 (555) 901-2345', 1, 29, null, null);

INSERT INTO pobocka 
(id_pobocka, nazev, adresa_id_adres, bank_id_bank, telefoni_cislo, status_id_status, zamestnanec_id_zamestnanec, id_file, id_klient)
VALUES
(pobocka_sequence.NEXTVAL, 'Pobocka 10', 10, 1, '+1 (555) 012-3456', 1, 30, null, null);
/

--drop SEQUENCE klient_sequence;
CREATE SEQUENCE klient_sequence
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
/
--select * from klient;
INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 123456789, 'Mark', 'Johnson', 'markjohnson@gmail.com', 1, 1, '+1 (555) 123-4567', 1, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 234567890, 'Emma', 'Miller', 'emmamiller@gmail.com', 2, 1, '+1 (555) 234-5678', 2, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 345678901, 'Robert', 'Smith', 'robertsmith@gmail.com', 3, 1, '+1 (555) 345-6789', 3, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 456789012, 'Sophie', 'Taylor', 'sophietaylor@gmail.com', 4, 1, '+1 (555) 456-7890', 4, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 567890123, 'James', 'Wilson', 'jameswilson@gmail.com', 5, 1, '+1 (555) 567-8901', 5, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 678901234, 'Isabella', 'Brown', 'isabellabrown@gmail.com', 6, 1, '+1 (555) 678-9012', 6, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 789012345, 'Alexander', 'Moore', 'alexandermoore@gmail.com', 7, 1, '+1 (555) 789-0123', 7, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 890123456, 'Olivia', 'Clark', 'oliviaclark@gmail.com', 8, 1, '+1 (555) 890-1234', 8, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 901234567, 'Daniel', 'Harris', 'danielharris@gmail.com', 9, 1, '+1 (555) 901-2345', 9, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 123456780, 'Ava', 'Turner', 'avaturner@gmail.com', 10, 1, '+1 (555) 012-3456', 10, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 234567801, 'William', 'Thomas', 'williamthomas@gmail.com', 11, 1, '+1 (555) 123-4567', 11, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 345678012, 'Chloe', 'White', 'chloewhite@gmail.com', 12, 1, '+1 (555) 234-5678', 12, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 456789023, 'Matthew', 'Harris', 'matthewharris@gmail.com', 13, 1, '+1 (555) 345-6789', 13, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 567890134, 'Emma', 'Martin', 'emmamartin@gmail.com', 14, 1, '+1 (555) 456-7890', 14, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 678901245, 'Benjamin', 'Clark', 'benjaminclark@gmail.com', 15, 1, '+1 (555) 567-8901', 15, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 789012356, 'Mia', 'Lewis', 'mialewis@gmail.com', 16, 1, '+1 (555) 678-9012', 16, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 890123467, 'Elijah', 'Hall', 'elijahhall@gmail.com', 17, 1, '+1 (555) 789-0123', 17, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 901234578, 'Amelia', 'Turner', 'ameliaturner@gmail.com', 18, 1, '+1 (555) 890-1234', 18, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 123456789, 'Logan', 'Ward', 'loganward@gmail.com', 19, 1, '+1 (555) 012-3456', 19, NULL, NULL, NULL, NULL);

INSERT INTO klient 
(id_klient, cislo_prukazu, jmeno, prijmeni, klient_email, adresa_id_adres, bank_id_bank, telefoni_cislo, zame_id_zamestnanec, odesi_file_id_file, odes_file_id_klient, id_file1, id_klient2)
VALUES 
(klient_sequence.NEXTVAL, 234567890, 'Ethan', 'Anderson', 'ethananderson@gmail.com', 20, 1, '+1 (555) 234-5678', 20, NULL, NULL, NULL, NULL);

/
CREATE SEQUENCE login_sequence
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
/

INSERT INTO login (zamestnanec_id_zamestnanec, email, heslo, is_admin, klient_id_klient, id_file, id_klient)
SELECT id_zamestnanec, email_zamestnanec, 'admin', 1, NULL, NULL, NULL
FROM zamestnanec
WHERE id_zamestnanec = 31; -- Здесь 1 - это идентификатор записи, которую вы хотите добавить
/
INSERT INTO login (zamestnanec_id_zamestnanec, email, heslo, is_admin, klient_id_klient, id_file, id_klient)
SELECT id_zamestnanec, email_zamestnanec, 'password123', 0, NULL, NULL, NULL
FROM zamestnanec
WHERE id_zamestnanec = 1;
/select * from adresa
--select * from status
--482c811da5d5b4bc6d497ffa98491e38

/
select * from log_table ;
/
SELECT z.id_zamestnanec, p.pozice_nazev FROM zamestnanec z JOIN prace_pozice p ON z.prace_pozice_id_pozice = p.id_pozice WHERE z.email_zamestnanec = 'johndoe@gmail.com'
/
SELECT f.nazev FROM pobocka f WHERE f.id_pobocka= (SELECT z.pobocka_id_pobocka FROM zamestnanec z WHERE z.id_zamestnanec = 1)
/

--SELECT f.popis FROM status f WHERE f.id_status= (SELECT z.status_id_status FROM zamestnanec z WHERE z.id_zamestnanec = 1)
--select * from pobocka
--make a package to make logging generic
--DECLARE
--    v_result BOOLEAN;
--BEGIN
--    -- Замените 'ваш_email' и 'ваш_пароль' на реальные значения
--    v_result := CheckPassword('johndoe@gmail.com', 'password123');
--
--    -- Делайте что-то с результатом, например, выведите его
--    IF v_result THEN
--        DBMS_OUTPUT.PUT_LINE('Пароль верный');
--    ELSE
--        DBMS_OUTPUT.PUT_LINE('Пароль неверный');
--    END IF;
--END;
--/
-- PL/SQL package for logging changes
CREATE OR REPLACE PACKAGE LogPackage AS
    PROCEDURE LogChange(
        p_operation_type IN VARCHAR2,
        p_table_name IN VARCHAR2,
        p_column_name IN VARCHAR2,
        p_old_value IN VARCHAR2,
        p_new_value IN VARCHAR2,
        p_changed_by IN VARCHAR2
    );
END LogPackage;
/

CREATE OR REPLACE PACKAGE BODY LogPackage AS
    PROCEDURE LogChange(
        p_operation_type IN VARCHAR2,
        p_table_name IN VARCHAR2,
        p_column_name IN VARCHAR2,
        p_old_value IN VARCHAR2,
        p_new_value IN VARCHAR2,
        p_changed_by IN VARCHAR2
    ) AS
    BEGIN
        INSERT INTO log_table (tabulka, operace, cas, uzivatel)
        VALUES (p_table_name, p_operation_type, SYSTIMESTAMP, p_changed_by);

        COMMIT;
    END;
END LogPackage;
/

CREATE OR REPLACE PROCEDURE UpdateKlientInfo (
    p_klient_id IN NUMBER,
    p_jmeno IN VARCHAR2,
    p_prijmeni IN VARCHAR2,
    p_telefoni_cislo IN VARCHAR2,
    p_cislo_prukazu IN NUMBER,
    p_klient_email IN VARCHAR2,
    p_adresa_id_adres IN NUMBER,
    p_bank_id_bank IN NUMBER
)
AS
BEGIN
    UPDATE klient
    SET
        jmeno = p_jmeno,
        prijmeni = p_prijmeni,
        telefoni_cislo = p_telefoni_cislo,
        cislo_prukazu = p_cislo_prukazu,
        klient_email = p_klient_email,
        adresa_id_adres = p_adresa_id_adres,
        bank_id_bank = p_bank_id_bank
    WHERE id_klient = p_klient_id;

    COMMIT;
END UpdateKlientInfo;
/


SELECT * FROM login ;


SELECT z.* 
FROM zamestnanec z
JOIN login l ON z.id_zamestnanec = l.zamestnanec_id_zamestnanec
WHERE l.login = 'johndoe@gmail.com';



CREATE OR REPLACE PROCEDURE AddNewKlient(
    p_id_klient IN NUMBER,
    p_cislo_prukazu IN NUMBER,
    p_jmeno IN VARCHAR2,
    p_prijmeni IN VARCHAR2,
    p_klient_email IN VARCHAR2,
    p_adresa_id_adres IN NUMBER,
    p_bank_id_bank IN NUMBER,
    p_telefoni_cislo IN VARCHAR2,
    p_zame_id_zamestnanec IN NUMBER,
    p_odesi_file_id_file IN NUMBER,
    p_odes_file_id_klient IN NUMBER,
    p_id_file1 IN NUMBER,
    p_id_klient2 IN NUMBER
) AS
BEGIN
    INSERT INTO klient (
        id_klient,
        cislo_prukazu,
        jmeno,
        prijmeni,
        klient_email,
        adresa_id_adres,
        bank_id_bank,
        telefoni_cislo,
        zame_id_zamestnanec,
        odesi_file_id_file,
        odes_file_id_klient,
        id_file1,
        id_klient2
    ) VALUES (
        p_id_klient,
        p_cislo_prukazu,
        p_jmeno,
        p_prijmeni,
        p_klient_email,
        p_adresa_id_adres,
        p_bank_id_bank,
        p_telefoni_cislo,
        p_zame_id_zamestnanec,
        p_odesi_file_id_file,
        p_odes_file_id_klient,
        p_id_file1,
        p_id_klient2
    );

    -- Log the change
    LogPackage.LogChange('INSERT', 'klient', NULL, NULL, NULL, USER);
    
    COMMIT;
END AddNewKlient;
/

CREATE OR REPLACE PROCEDURE AddNewZamestnanec(
    p_id_zamestnanec IN NUMBER,
    p_jmeno IN VARCHAR2,
    p_prijmeni IN VARCHAR2,
    p_mzda IN NUMBER,
    p_telefoni_cislo IN VARCHAR2,
    p_adresa_id_adres IN NUMBER,
    p_bank_id_bank IN NUMBER,
    p_status_id_status IN NUMBER,
    p_zame_id_zamestnanec IN NUMBER,
    p_pobocka_id_pobocka IN NUMBER,
    p_prace_pozice_id_pozice IN NUMBER,
    p_email_zamestnanec IN VARCHAR2,
    p_id_file1 IN NUMBER,
    p_id_klient1 IN NUMBER
) AS
BEGIN
    INSERT INTO zamestnanec (
        id_zamestnanec,
        jmeno,
        prijmeni,
        mzda,
        telefoni_cislo,
        adresa_id_adres,
        bank_id_bank,
        status_id_status,
        zamestnanec_id_zamestnanec1,
        pobocka_id_pobocka,
        prace_pozice_id_pozice,
        email_zamestnanec
    ) VALUES (
        p_id_zamestnanec,
        p_jmeno,
        p_prijmeni,
        p_mzda,
        p_telefoni_cislo,
        p_adresa_id_adres,
        p_bank_id_bank,
        p_status_id_status,
        p_zame_id_zamestnanec,
        p_pobocka_id_pobocka,
        p_prace_pozice_id_pozice,
        p_email_zamestnanec
    );

    -- Log the change
    LogPackage.LogChange('INSERT', 'zamestnanec', NULL, NULL, NULL, USER);
    
    COMMIT;
END AddNewZamestnanec;
/

CREATE OR REPLACE PROCEDURE RemoveKlient(
    p_id_klient IN NUMBER
) AS
BEGIN
    -- Log the change before deletion
    LogPackage.LogChange('DELETE', 'klient', NULL, NULL, NULL, USER);

    -- Delete the Klient
    DELETE FROM klient WHERE id_klient = p_id_klient;

    COMMIT;
END RemoveKlient;
/

CREATE OR REPLACE PROCEDURE RemoveZamestnanec(
    p_id_zamestnanec IN NUMBER
) AS
BEGIN
    -- Log the change before deletion
    LogPackage.LogChange('DELETE', 'zamestnanec', NULL, NULL, NULL, USER);

    -- Delete the Zamestnanec
    DELETE FROM zamestnanec WHERE id_zamestnanec = p_id_zamestnanec;

    COMMIT;
END RemoveZamestnanec;
/

CREATE OR REPLACE PROCEDURE EditKlient(
    p_id_klient IN NUMBER,
    p_new_email IN VARCHAR2,
    p_new_telefoni_cislo IN VARCHAR2,
    p_new_name IN VARCHAR2,
    p_new_surname IN VARCHAR2,
    p_role IN VARCHAR2,
    p_new_ulice IN VARCHAR2,
    p_new_mesto IN VARCHAR2,
    p_new_cislo_popisne IN VARCHAR2,
    p_new_psc IN CHAR,
    p_new_stat IN VARCHAR2,
    p_new_cislo_prukazu IN NUMBER
) AS
BEGIN
    IF p_new_email IS NOT NULL THEN
        LogPackage.LogChange('UPDATE', 'klient', 'klient_email', NULL, p_new_email, USER);
    END IF;
    IF p_new_telefoni_cislo IS NOT NULL THEN
        LogPackage.LogChange('UPDATE', 'klient', 'telefoni_cislo', NULL, p_new_telefoni_cislo, USER);
    END IF;
    IF p_new_name IS NOT NULL THEN
        LogPackage.LogChange('UPDATE', 'klient', 'jmeno', NULL, p_new_name, USER);
    END IF;
    IF p_new_surname IS NOT NULL THEN
        LogPackage.LogChange('UPDATE', 'klient', 'prijmeni', NULL, p_new_surname, USER);
    END IF;

    IF p_role = 'SELF' THEN
        UPDATE klient k
        SET k.klient_email = COALESCE(p_new_email, k.klient_email),
            k.telefoni_cislo = COALESCE(p_new_telefoni_cislo, k.telefoni_cislo)
        WHERE k.id_klient = p_id_klient;

          EditKlientAddress(
            p_id_klient,
            p_new_ulice,
            p_new_mesto,
            p_new_cislo_popisne,
            p_new_psc,
            p_new_stat
        );
    ELSIF p_role IN ('ZAMESTNANEC', 'ADMIN') THEN
        UPDATE klient k
        SET k.klient_email = COALESCE(p_new_email, k.klient_email),
            k.telefoni_cislo = COALESCE(p_new_telefoni_cislo, k.telefoni_cislo),
            k.jmeno = COALESCE(p_new_name, k.jmeno),
            k.prijmeni = COALESCE(p_new_surname, k.prijmeni),
            k.cislo_prukazu = COALESCE(p_new_cislo_prukazu, k.cislo_prukazu)
        WHERE k.id_klient = p_id_klient;

          EditKlientAddress(
            p_id_klient,
            p_new_ulice,
            p_new_mesto,
            p_new_cislo_popisne,
            p_new_psc,
            p_new_stat
        );
    ELSE
        raise_application_error(-20223, 'Invalid role specified');
    END IF;

    COMMIT;
END EditKlient;
/


CREATE OR REPLACE PROCEDURE EditKlientAddress(
    p_id_klient IN NUMBER,
    p_new_ulice IN VARCHAR2,
    p_new_mesto IN VARCHAR2,
    p_new_cislo_popisne IN VARCHAR2,
    p_new_psc IN CHAR,
    p_new_stat IN VARCHAR2
) AS
BEGIN
    -- Log the address change before update
    LogPackage.LogChange('UPDATE', 'adresa', 'ulice', NULL, p_new_ulice, USER);
    LogPackage.LogChange('UPDATE', 'adresa', 'mesto', NULL, p_new_mesto, USER);
    LogPackage.LogChange('UPDATE', 'adresa', 'cislo_popisne', NULL, p_new_cislo_popisne, USER);
    LogPackage.LogChange('UPDATE', 'adresa', 'psc', NULL, p_new_psc, USER);
    LogPackage.LogChange('UPDATE', 'adresa', 'stat', NULL, p_new_stat, USER);

    -- Update the address
    UPDATE adresa a
    SET ulice = COALESCE(p_new_ulice, a.ulice),
        mesto = COALESCE(p_new_mesto, a.mesto),
        cislo_popisne = COALESCE(p_new_cislo_popisne, a.cislo_popisne),
        psc = COALESCE(p_new_psc, a.psc),
        stat = COALESCE(p_new_stat, a.stat)
    WHERE a.id_adres = (SELECT adresa_id_adres FROM klient WHERE id_klient = p_id_klient);

    COMMIT;
END EditKlientAddress;
/

CREATE OR REPLACE PROCEDURE EditZamestnanec(
    p_id_zamestnanec IN NUMBER,
    p_new_email IN VARCHAR2,
    p_new_telefoni_cislo IN VARCHAR2,
    p_new_name IN VARCHAR2,
    p_new_surname IN VARCHAR2,
    p_role IN VARCHAR2,
    p_new_mzda IN NUMBER,
    p_new_id_prace_pozice IN NUMBER
) AS
BEGIN
    IF p_new_email IS NOT NULL THEN
        LogPackage.LogChange('UPDATE', 'zamestnanec', 'zamestnanec_email', NULL, p_new_email, USER);
    END IF;
    IF p_new_telefoni_cislo IS NOT NULL THEN
        LogPackage.LogChange('UPDATE', 'zamestnanec', 'telefoni_cislo', NULL, p_new_telefoni_cislo, USER);
    END IF;
    IF p_new_name IS NOT NULL THEN
        LogPackage.LogChange('UPDATE', 'zamestnanec', 'jmeno', NULL, p_new_name, USER);
    END IF;
    IF p_new_surname IS NOT NULL THEN
        LogPackage.LogChange('UPDATE', 'zamestnanec', 'prijmeni', NULL, p_new_surname, USER);
    END IF;

    -- Update Zamestnanec based on the role
    IF p_role = 'SELF' THEN
        UPDATE zamestnanec z
        SET z.email_zamestnanec = COALESCE(p_new_email, z.email_zamestnanec),
            z.telefoni_cislo = COALESCE(p_new_telefoni_cislo, z.telefoni_cislo),
            z.jmeno = COALESCE(p_new_name, z.jmeno),
            z.prijmeni = COALESCE(p_new_surname, z.prijmeni)
        WHERE z.id_zamestnanec = p_id_zamestnanec;
    ELSIF p_role = 'ADMIN' THEN
        UPDATE zamestnanec z
        SET z.email_zamestnanec = COALESCE(p_new_email, z.email_zamestnanec),
            z.telefoni_cislo = COALESCE(p_new_telefoni_cislo, z.telefoni_cislo),
            z.jmeno = COALESCE(p_new_name, z.jmeno),
            z.prijmeni = COALESCE(p_new_surname, z.prijmeni),
            z.mzda = COALESCE(p_new_mzda, z.mzda),
            z.PRACE_POZICE_ID_POZICE = COALESCE(p_new_id_prace_pozice, z.PRACE_POZICE_ID_POZICE)
        WHERE z.id_zamestnanec = p_id_zamestnanec;
    ELSE
        -- Invalid role, handle accordingly
        raise_application_error(-20223, 'Invalid role specified');
    END IF;

    COMMIT;
END EditZamestnanec;
/

CREATE OR REPLACE TRIGGER HashPasswordTrigger
BEFORE INSERT ON login
FOR EACH ROW
DECLARE
    v_hashed_password VARCHAR2(100);
BEGIN
    -- Hash the password using DBMS_OBFUSCATION_TOOLKIT
    v_hashed_password := DBMS_OBFUSCATION_TOOLKIT.MD5(input => UTL_RAW.CAST_TO_RAW(:NEW.heslo));

    -- Update the NEW record with the hashed password
    :NEW.heslo := v_hashed_password;
END HashPasswordTrigger;
/

CREATE OR REPLACE FUNCTION CheckPassword(
    p_email IN VARCHAR2,
    p_password IN VARCHAR2
) RETURN BOOLEAN
IS
    v_hashed_password VARCHAR2(100);
    v_count NUMBER;
BEGIN
    -- Hash the input password using DBMS_OBFUSCATION_TOOLKIT
    v_hashed_password := DBMS_OBFUSCATION_TOOLKIT.MD5(input => UTL_RAW.CAST_TO_RAW(p_password));

    BEGIN
        -- Check if the hashed password matches the one in the database for clients
        SELECT COUNT(*)
        INTO v_count
        FROM login
        WHERE klient_id_klient IS NOT NULL
          AND email = p_email
          AND heslo = v_hashed_password;

        -- If a match is found for clients, return TRUE
        IF v_count > 0 THEN
            RETURN TRUE;
        END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- Log the error or use DBMS_OUTPUT
            DBMS_OUTPUT.PUT_LINE('Error in CheckPassword for clients: ' || SQLERRM);
    END;

    BEGIN
        -- Check if the hashed password matches the one in the database for employees
        SELECT COUNT(*)
        INTO v_count
        FROM login
        WHERE zamestnanec_id_zamestnanec IS NOT NULL
          AND email = p_email
          AND heslo = v_hashed_password;

        -- If a match is found for employees, return TRUE
        IF v_count > 0 THEN
            RETURN TRUE;
        END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- Log the error or use DBMS_OUTPUT
            DBMS_OUTPUT.PUT_LINE('Error in CheckPassword for employees: ' || SQLERRM);
    END;

    -- If no match found, return FALSE
    RETURN FALSE;
END CheckPassword;
/

CREATE OR REPLACE PROCEDURE OpenNewUcet(
    p_id_klient IN NUMBER,
    p_cislo_uctu IN NUMBER,
    p_nazev IN VARCHAR2,
    p_id_bank IN NUMBER
) AS
    v_id_ucet NUMBER;
    p_role VARCHAR2(30);
BEGIN

    -- Check if the user has the role of 'ZAMESTNANEC'
    IF p_role IN ('ZAMESTNANEC', 'ADMIN') THEN
        -- Get the next ID for ucet
        SELECT MAX(id_ucet) + 1 INTO v_id_ucet FROM ucet;

        -- Insert the new ucet
        INSERT INTO ucet (id_ucet, cislo_uctu, nazev, klient_id_klient, bank_id_bank, status_id_status)
        VALUES (v_id_ucet, p_cislo_uctu, p_nazev, p_id_klient, p_id_bank, 1);

        -- Log the addition
        LogPackage.LogChange('INSERT', 'ucet', 'id_ucet', NULL, v_id_ucet, USER);

        COMMIT;
    ELSE
        raise_application_error(-20223, 'Insufficient privileges');
    END IF;
END OpenNewUcet;
/

CREATE OR REPLACE PROCEDURE OrderNewCard(
    p_ucet_id_ucet IN NUMBER,
    p_jmeno IN VARCHAR2,
    p_prijmeni IN VARCHAR2,
    p_cislo_karty IN NUMBER,
    p_platebni_system IN VARCHAR2,
    p_platnost IN DATE,
    p_typ IN VARCHAR2
) AS
    v_id_karta NUMBER;
BEGIN
    -- Get the next ID for karta
    SELECT MAX(id_karta) + 1 INTO v_id_karta FROM karta;

    -- Insert the new karta
    INSERT INTO karta (id_karta, jmeno, prijmeni, cislo_karty, platebni_system, platnost, typ, ucet_id_ucet)
    VALUES (v_id_karta, p_jmeno, p_prijmeni, p_cislo_karty, p_platebni_system, p_platnost, p_typ, p_ucet_id_ucet);

    -- Log the addition
    LogPackage.LogChange('INSERT', 'karta', 'id_karta', NULL, v_id_karta, USER);

    -- Commit the transaction
    COMMIT;
END OrderNewCard;
/

CREATE OR REPLACE VIEW zamestnanec_hierarchy_view AS
SELECT
    z.id_zamestnanec,
    z.jmeno,
    z.prijmeni,
    z.prace_pozice_id_pozice,
    z.zamestnanec_id_zamestnanec1
FROM
    zamestnanec z;

CREATE OR REPLACE PROCEDURE GetHierarchyInformation(
    p_zamestnanec_id IN NUMBER
) AS
    -- Cursor to fetch klients managed by the employee
    CURSOR klients_cursor IS
        SELECT
            k.id_klient,
            k.jmeno AS klient_jmeno,
            k.prijmeni AS klient_prijmeni
        FROM
            klient k
        WHERE
            k.zame_id_zamestnanec = p_zamestnanec_id;

    -- Cursor to fetch bankers managed by the manager
    CURSOR bankers_cursor IS
        SELECT
            b.id_zamestnanec,
            b.jmeno AS banker_jmeno,
            b.prijmeni AS banker_prijmeni
        FROM
            zamestnanec_hierarchy_view b
        WHERE
            b.zamestnanec_id_zamestnanec1 = '1';

    -- Cursor to fetch managers managed by the top-manager
    CURSOR managers_cursor IS
        SELECT
            m.id_zamestnanec,
            m.jmeno AS manager_jmeno,
            m.prijmeni AS manager_prijmeni
        FROM
            zamestnanec_hierarchy_view m
        WHERE
            m.zamestnanec_id_zamestnanec1 = '2';

    -- Variables to hold cursor records
    klients_rec klients_cursor%ROWTYPE;
    bankers_rec bankers_cursor%ROWTYPE;
    managers_rec managers_cursor%ROWTYPE;

BEGIN
    -- Fetch klients
    FOR klients_rec IN klients_cursor LOOP
        DBMS_OUTPUT.PUT_LINE('Klient: ' || klients_rec.klient_jmeno || ' ' || klients_rec.klient_prijmeni);
    END LOOP;

    -- Fetch bankers
    FOR bankers_rec IN bankers_cursor LOOP
        DBMS_OUTPUT.PUT_LINE('Banker: ' || bankers_rec.banker_jmeno || ' ' || bankers_rec.banker_prijmeni);
    END LOOP;

    -- Fetch managers
    FOR managers_rec IN managers_cursor LOOP
        DBMS_OUTPUT.PUT_LINE('Manager: ' || managers_rec.manager_jmeno || ' ' || managers_rec.manager_prijmeni);
    END LOOP;
END GetHierarchyInformation;
/



-- Create a nested table type for client information
CREATE OR REPLACE TYPE client_info_nt IS TABLE OF VARCHAR2(100);
/

-- Modify the procedure into a function
CREATE OR REPLACE FUNCTION GetHierarchyInfo(
    p_id_zamestnanec IN NUMBER
) RETURN SYS_REFCURSOR IS
    -- Cursor to fetch klients managed by the employee
    klients_cursor SYS_REFCURSOR;

BEGIN
    OPEN klients_cursor FOR
        SELECT
            k.jmeno || ' ' || k.prijmeni AS full_name
        FROM
            klient k
        WHERE
            k.zame_id_zamestnanec = p_id_zamestnanec;

    RETURN klients_cursor;
END GetHierarchyInfo;
